[{"D:\\Lockdown\\ReactJS\\kudvenkat\\src\\index.js":"1","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\App.js":"2","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\reportWebVitals.js":"3","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\formFormikValid.js":"4","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\formFormik.js":"5","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\formValidYup.js":"6","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\formikYupAdv.js":"7","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\useState.js":"8","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\useState1.js":"9","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\useState2.js":"10","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\useEffect.js":"11","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\useEffect1.js":"12","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\useEffect2.js":"13","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\useContext.js":"14","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\useContext1.js":"15","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\customHook.js":"16"},{"size":17204,"mtime":1612510557829,"results":"17","hashOfConfig":"18"},{"size":528,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":2024,"mtime":1611907508498,"results":"21","hashOfConfig":"18"},{"size":1116,"mtime":1611979307174,"results":"22","hashOfConfig":"18"},{"size":4342,"mtime":1611894253566,"results":"23","hashOfConfig":"18"},{"size":2292,"mtime":1611907870594,"results":"24","hashOfConfig":"18"},{"size":745,"mtime":1612257747898,"results":"25","hashOfConfig":"18"},{"size":1015,"mtime":1612275594276,"results":"26","hashOfConfig":"18"},{"size":2745,"mtime":1612265690004,"results":"27","hashOfConfig":"18"},{"size":1180,"mtime":1612358305166,"results":"28","hashOfConfig":"18"},{"size":1361,"mtime":1612347618361,"results":"29","hashOfConfig":"18"},{"size":1213,"mtime":1612360798439,"results":"30","hashOfConfig":"18"},{"size":1220,"mtime":1612360864214,"results":"31","hashOfConfig":"18"},{"size":2209,"mtime":1612362062170,"results":"32","hashOfConfig":"18"},{"size":524,"mtime":1612510206547,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"1q75qxx",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Lockdown\\ReactJS\\kudvenkat\\src\\index.js",["74","75","76","77","78","79","80","81"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport video from '../src/assets/video.mp4';\nimport FormsFormik from './formFormik';\nimport FormsFormikValid from './formFormikValid';\nimport FormsValidYup from './formValidYup';\nimport FormikAdv from './formikYupAdv';\nimport HookState from './useState';\nimport HookState1 from './useState1';\nimport HookState2 from './useState2';\nimport EmployeeComponent from './useEffect';\nimport DatatablePage from './useEffect1';\nimport EmployeeComponent1 from './useEffect1';\nimport EmployeeEffect from './useEffect2';\nimport UseContextFunc from './useContext'\nimport UseContextFunc1 from './useContext1';\nimport CustomHookFunc from './customHook';\n// import EmployeeYup from './formValidYup';\nimport {BrowserRouter, Link, NavLink, Route,Switch} from 'react-router-dom';\n\n// const element = <h1 className='test'>React</h1>;\nconst element = React.createElement(\"div\",{className:\"test\"},React.createElement(\"h1\",null,\"Some Data\"));\n// instead of above we can use React.createElement(\"h1\",{className:\"test\"},\"some data\")\n// React.createElement(\"div\",props,childElements)  -->syntax\nReactDOM.render(element,document.getElementById(\"root\"));\n\n//Functional components\n//here we are creating a component to display data,, we are using component in component for reusability\nvar DisplayEmp = (emp)=>{\n  return <div>\n    <h3>Using Functional Componets</h3>\n    <h1>Employee Dets:</h1> \n    <p> <label>Emp Id:  {emp.Id}</label> </p>\n    <p> <label>Emp Name:  {emp.Name}</label> </p>\n    <p> <label>Emp Location:  {emp.Location}</label> </p>\n    <Department DepName = {emp.DepName} />\n  </div>\n}\nconst Department = (dep)=>{\n  return <div>\n    <p> <label>Department:  {dep.DepName}</label> </p>\n  </div>\n}\nconst empcomp = <DisplayEmp Id=\"100\" Name=\"Dinesh\" Location=\"Bnglr\" DepName=\"UI\" />\nReactDOM.render(empcomp,document.getElementById('funccomp'));\n\n//Class components\nclass Employee extends React.Component{\n  constructor(props){\n    super(props); //if we want base class then we have to use super and props is const method\n    console.log(this.props)\n  }\n  render(){\n    return <div>\n      <h3>Using Class Components</h3>\n      <h1>Employee Dets:</h1> \n      <p> <label>Emp Id:  {this.props.Id}</label> </p>   */we have to use this.props to get this.props\n      <p> <label>Emp Name:  {this.props.Name}</label> </p>\n      <Dep DepName = {this.props.DepName} />\n    </div>\n  }\n}\nclass Dep extends React.Component{  //we will use this component in the above component\n  render(){\n    return <div>\n      <h1>Department Dets:</h1> \n      <p> <label>Emp Department:  {this.props.DepName}</label> </p>   \n      \n    </div>\n  }\n}\nReactDOM.render(<Employee Id=\"69\" Name=\"DP\" DepName=\"IT\" />,document.getElementById(\"classcomp\"))\n\n//STATE COMPONENT\nclass Stat extends React.Component{\n  state = {counter:0}   //we are created a object\n  clickCount = (res)=>{\n    this.setState({counter:this.state.counter+1})    //using set state we are using and changing it\n  }\n  render(){\n    return <div>\n      <h1>States::</h1>\n      <button onClick={this.clickCount}>Click to get count</button> //calling a function to increase count\n      <p>Button clicked <b>{this.state.counter}</b> times</p>  //geting data from variable\n    </div>\n  }\n}\nReactDOM.render(<Stat />,document.getElementById(\"state\"))\n\n//CONTEXT METHOD (exchanging data from one to another component by states)  Parent to child\n\nconst empContext = React.createContext();\nclass App extends React.Component{\n  constructor(props){\n    super(props);   //super used to get base class elements\n    this.state = {Idd:69,   //here state is also builtin \n               Name:\"Dinesh\"};//created a state var \n  }\n \n  dataChange = ()=>{\n    this.setState({Idd:20});   //Here we are changing/Updating the state\n  } \n  render(){\n    return <div><h1>\n                    App component (Parent)\n                </h1>\n                <h4>Emp id using context: {this.state.Idd} </h4>\n                <empContext.Provider value = {this.state}>  //Provider and value is builtin\n                  <App1></App1>\n                </empContext.Provider>\n                <p>\n                  <button onClick={this.dataChange}>Click to Change data</button>\n                </p>\n            </div>\n  }\n}\nclass App1 extends React.Component{\n  static contextType = empContext;   //contextType is builtin\n  render(){\n    return <div><h1>\n                    App1 component (Child1)\n                </h1>\n                <h4>Emp id using context: {this.context.Idd} </h4> //Context  is builtin\n                <App2 />\n            </div>\n  }\n}\nclass App2 extends React.Component{\n  static contextType = empContext;    \n  render(){\n    return <div><h1>\n                    App2 component (Child2)\n                </h1>\n                <h4>Emp Name using context: {this.context.Name} </h4>\n            </div>\n  }\n}\nReactDOM.render(<App />,document.getElementById('context1'));\n\n//Child to Parent component\nconst cpContext = React.createContext({\n                                        //data:'',\n                                       // changeName:()=>{}\n})\nclass Parent extends React.Component{\n  constructor(props){\n    super(props);\n    this.state ={data:{Id:469,Name:\"Dinesh\"},\n                  changeName: this.updateChild   //We calling the function with key\n                            //If we assign a key then it will be in state and can be called by child using context\n                }\n  }\n  updateChild = ()=>{this.setState({data:{Name:\"Pammi\",Id:44}})}\n  render(){\n      return <div>\n        <h2>Parent Component</h2>\n        <h2>Name: {this.state.data.Name}, ID: {this.state.data.Id}</h2>\n        <cpContext.Provider value = {this.state}>\n        <Child />\n        </cpContext.Provider>\n        \n      </div>\n}\n}\nclass Child extends React.Component{\n  static contextType = cpContext; \n  render(){\n    return <div>\n      <h2>Child Component</h2>\n      <h2>Name in Parent is: {this.context.data.Name}</h2>\n      {/* In below step we call a key in state then that key calls a function in parent */}\n      <p><button onClick={this.context.changeName}>Click to change data in parent</button></p>\n    </div>\n  }\n}\nReactDOM.render(<Parent />,document.getElementById(\"contextChildToParent\"))\n\n//Display List of employees \n\nfunction Employee1(props){  //function called by map to diplay data in table  //props is jus a var\n  return <div style = {{border:\"2px solid green\"}}>\n    <p>Employee ID: {props.value.Id}</p>\n    <p>Employee Name: {props.value.Name}</p>\n    <p>Employee City: {props.value.City}</p>\n  </div>\n}\nfunction DisplayEmployee(props){    //function maps and displays data\n  const emplList = props.employeeList;\n  const listEmployee = emplList.map((emp) => <Employee1 value = {emp} />);  // key ={emp.Id}  we add key if there is no stable ids\n  return <div>{listEmployee}</div>\n\n}\nconst employees = [\n  {Id:1,Name:\"din\",City:\"Nlr\"},{Id:2,Name:\"abc\",City:\"Blr\"},{Id:2,Name:\"def\",City:\"Pok\"}\n  ]\nReactDOM.render(<DisplayEmployee employeeList = {employees} />,document.getElementById(\"emplList\"))\n\n//APIs\nclass EmployeeApi extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {empl:[]};\n    \n}\ncomponentDidMount(){ //we canot directly write fetch, because in class everything will be function\n        //In angular we used ngOnInit() here we use componentDidMount()\n  fetch(\"https://jsonplaceholder.typicode.com/users\").then(res=>res.json())\n  .then(result => {console.log(result);this.setState({empl:result})}); \n}\n  render(){\n    return (\n      <div>\n        <h3>Employee Details using API</h3>\n        <table>\n          <thead> <tr> <th>ID</th> <th>FirstName</th> <th>Email</th> </tr> </thead>\n          <tbody>\n            {this.state.empl.map((emp)=>(\n              <tr key={emp.id}> \n              <td>{emp.id}</td> \n              <td>{emp.name}</td> \n              <td>{emp.email}</td> </tr>\n            ))}    </tbody>\n        </table>\n      </div>\n    )  }  }\n\n\nReactDOM.render(<EmployeeApi />,document.getElementById(\"reactAPI\"))\n\n//USING Refs\nclass Refs extends React.Component{\n  constructor(props){\n    super(props);\n    this.quantityRef = React.createRef()   //step1\n  }\n  increment = () => {\n    this.quantityRef.current.value++    //step3\n  }\n  render(){\n    //alert(\"ref started\") // without ref every click alert will be called and input becoms readOnly\n    return <div>\n      Enter Quantity: <input type = \"text\" ref ={this.quantityRef} />   {/*Step2*/}\n      <button onClick={this.increment}>+</button>\n    </div>\n  }\n}\nReactDOM.render(<Refs />,document.getElementById(\"refs\"))\n\n//refs Login focus\nclass Login extends React.Component{\n  constructor(props){\n    super(props);\n    this.userRef = React.createRef()    //STEP1\n  }\n  componentDidMount(){\n    this.userRef.current.focus()   //STEP3 - using it the form element will be focused \n  }\n  render(){\n    return <>\n      UserName: <input type=\"text\" ref = {this.userRef} /> <br/>   {/*STEP2*/}\n      Password: <input type=\"password\" /> <br/>\n      <button>Login</button>\n    </>\n  }\n}\nReactDOM.render(<Login />,document.getElementById(\"refsLogin\"))\n\n//refs Pause/Play Video\nclass RefVideo extends React.Component{\n  constructor(props){\n    super(props);\n    this.videoRef=React.createRef()    //STEP1\n  }\nplayVideo = ()=>{this.videoRef.current.play()}    //STEP3\npauseVideo = ()=>{this.videoRef.current.pause()}\n  render() {\n    return <div>\n      <video ref={this.videoRef} width=\"300\" height=\"150\" controls>   //STEP2\n        <source src = {video} type=\"video/mp4\">\n        </source>\n      </video> <br />\n      <button onClick={this.playVideo}>Play</button>\n      <button onClick={this.pauseVideo}>Pause</button>\n    </div>\n  }\n};\nReactDOM.render(<RefVideo />,document.getElementById(\"refsVideo\"))\n\n//Component calls from other component and creates focus\nclass Elevator extends React.Component{\n  constructor(props){\n    super(props);\n    this.elevatorRef = React.createRef()\n  }\n  render(){\n    return <div>\n      ElevatorName: <input type = \"text\" ref = {this.elevatorRef}/> <br/>\n      ElevatorSpeed: <input type = \"text\" />\n      <SubElevator refvalue = {this.elevatorRef} />\n    </div>\n  }\n}\nclass SubElevator extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  focusFunc = ()=>{this.props.refvalue.current.focus();}\n  render(){\n    return <div>\n      <p onClick={this.focusFunc}>ElevatorName: <b>Name</b></p>\n      <p>ElevatorSpeed: <b>Speed</b></p>\n    </div>\n  } \n}\nReactDOM.render(<Elevator />,document.getElementById(\"refsElevator\"))\n\n// Forms without Formik\nclass Forms extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {employee:{Id:'',Name:'',Location:''}}\n\n  }\n  changeHandler = (e)=>{   //STEP2 \n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({employee:{\n      ...this.state.employee,[name]:value}})}  //changes the state to given inp\n  submitFunc = (e)=>{alert(JSON.stringify(this.state.employee))}   //displays value in alert\n  render(){\n    return <React.Fragment>\n      <form onSubmit={this.submitFunc}>   {/*Forms is step1*/}\n        <h3>Normal Form</h3>\n        <label>Employee Id: </label>\n        <input type=\"text\" value={this.state.employee.Id} name=\"Id\" onChange={this.changeHandler} /> <br />\n        <label>Employee Name: </label>\n        <input type=\"text\" value={this.state.employee.Name} name=\"Name\" onChange={this.changeHandler} /> <br />\n        <label>Employee Location: </label>\n        <input type=\"text\" value={this.state.employee.Location} name=\"Location\" onChange={this.changeHandler} /> <br />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </React.Fragment>\n  }\n}\nReactDOM.render(<Forms />,document.getElementById(\"Forms\"))\n//Form using Formik without validation\nReactDOM.render(<FormsFormik />,document.getElementById(\"FormUsingFormik\"))\n//Formik with normal validation\nReactDOM.render(<FormsFormikValid />,document.getElementById(\"FormUsingFormikValid\"))\n//Formik with YUP\nReactDOM.render(<FormsValidYup />,document.getElementById(\"FormUsingFormikValidWithYep\"))\n//Here we are using Formik as a component \n//Formik components are Formik,Form,Field, ErrorMessage\nReactDOM.render(<FormikAdv  />,document.getElementById(\"formikAdv\"))\n\n//LIFE CYCLE METHODS\n//Check ntc for remaining life cycles\n  //Mounting\nclass Mounting extends React.Component {\n  constructor(props) {\n    super(props); this.state = {favoritecolor: \"red\"};\n  }\n  componentDidMount() {\n    setTimeout(() => {//document.getElementById(\"mount\").innerHTML=\"some data \";\n      this.setState({favoritecolor: \"yellow\"})}, 3000)\n  }\n  render() {\n    return (<>\n      <h1>Mounting</h1>\n      <h3>Color will change using Mounting {this.state.favoritecolor}</h3>\n      <p id=\"mount\"></p>\n      </>\n    );\n  }}\nReactDOM.render(<Mounting />, document.getElementById('mount'));\n\n//UPDATING METHODS\nclass Update extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {favoritecolor: \"red\"};\n  }\n  static getDerivedStateFromProps(props, state) {\n    return {favoritecolor: props.favcol };\n  }\n  changeColor = () => {\n    this.setState({favoritecolor: \"blue\"});\n  }\n  render() {\n    return (\n      <div>\n      <h3>Using updatings {this.state.favoritecolor}</h3>\n      <button type=\"button\" onClick={this.changeColor}>Change color</button>\n      </div>\n    );\n  }\n}\n/*\nThis example has a button that changes the favorite color to blue,\nbut since the getDerivedStateFromProps() method is called,\nthe favorite color is still rendered as yellow\n(because the method updates the state\nwith the color from the favcol attribute).\n*/\nReactDOM.render(<Update favcol=\"yellow\"/>, document.getElementById('update'));\n\n//shouldComponentUpdate() {  return false;}  the value is false so component didnt ren renders/update\n\n//getsnapshot,compdidupdate\nclass Update1 extends React.Component {\n  constructor(props) {\n    super(props); this.state = {favoritecolor: \"red\"};\n  }\n  componentDidMount() {\n    setTimeout(() => { this.setState({favoritecolor: \"yellow\"})}, 6000)\n  }\n  getSnapshotBeforeUpdate(prevProps, prevState) {  //it stores previous states and props\n    document.getElementById(\"div1\").innerHTML =\n    \"Before the update, the favorite was \" + prevState.favoritecolor;\n  }\n  componentDidUpdate() {\n    document.getElementById(\"div2\").innerHTML =\n    \"The updated favorite is \" + this.state.favoritecolor;\n  }\n  render() {\n    return (\n      <div>\n        <h1>My Favorite Color is {this.state.favoritecolor}</h1>\n        <div id=\"div1\"></div>\n        <div id=\"div2\"></div>\n      </div>\n    );  } }\nReactDOM.render(<Update1 />, document.getElementById('update1'));\n\n//UNMOUNTING\nclass Unmount extends React.Component {\n  constructor(props) {   super(props); this.state = {show: true};  }\n  delHeader = () => { this.setState({show: false}); }\n  render() {\n    let myheader;\n    if (this.state.show) { myheader = <UnmountChild />;  };\n    return (\n      <div>\n      {myheader}\n      <button type=\"button\" onClick={this.delHeader}>Delete Header</button>\n      </div>\n    );  }}\n\nclass UnmountChild extends React.Component {\n  componentWillUnmount() {\n    alert(\"The component named Header is about to be unmounted.\");  }\n  render() {\n    return ( <h1>Hello World!</h1>\n    );  }}\nReactDOM.render(<Unmount />, document.getElementById('unmount'));\n\n//Hooks\n//useState\nReactDOM.render(<HookState />, document.getElementById('hookstate')); //Changes single value\nReactDOM.render(<HookState1 />, document.getElementById('hookstate1')); //Changes multiple values\nReactDOM.render(<HookState2 />, document.getElementById('hookstate2')); //Interaction between components\nReactDOM.render(<EmployeeComponent />, document.getElementById('useEffect'));\n//After searching its throwing error so coomented\n// ReactDOM.render(<EmployeeComponent1 />, document.getElementById('useEffect1'));\n//ComponentWillUnmount\nReactDOM.render(<EmployeeEffect />, document.getElementById('useEffect2'));\nReactDOM.render(<UseContextFunc />, document.getElementById('useContext'));\nReactDOM.render(<UseContextFunc1 />, document.getElementById('useContext1'));\nReactDOM.render(<CustomHookFunc />, document.getElementById('customHook'));\n\n//ROUTING\nfunction Invalid(){\n  return <h2>COMPONENTNOT Found</h2>\n}\nfunction RoutingComp(){\n  return<>\n        <h2>Routing Component</h2>\n        <ul>\n          <li><Link to=\"/\">EMP_API</Link></li>     {/*STEP1 */}\n          <li><Link to=\"/formik\">FORMIK_ADV</Link></li>\n          <li><NavLink to=\"/formik\" activeClassName=\"testLink\">Formik</NavLink></li>\n        </ul>\n        <Switch>\n        <Route exact path=\"/\" component={EmployeeApi}></Route>    {/*Step2,3 */}\n        <Route path=\"/formik\" component={FormikAdv}></Route>   {/*Using exact it will become home page */}\n        <Route path=\"/formik\" component={FormsFormik}></Route>\n        <Route component={Invalid}></Route>   {/*When the path is not found it will be executed */}\n        </Switch>   {/*If there is mul comps for same path, it will display all. so we use switch to avoid that */}\n        </>\n}\nReactDOM.render(<BrowserRouter><RoutingComp /></BrowserRouter>,document.getElementById('routing'));    //STEP4","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\App.js",[],["82","83"],"D:\\Lockdown\\ReactJS\\kudvenkat\\src\\reportWebVitals.js",[],"D:\\Lockdown\\ReactJS\\kudvenkat\\src\\formFormikValid.js",[],["84","85"],"D:\\Lockdown\\ReactJS\\kudvenkat\\src\\formFormik.js",[],"D:\\Lockdown\\ReactJS\\kudvenkat\\src\\formValidYup.js",[],"D:\\Lockdown\\ReactJS\\kudvenkat\\src\\formikYupAdv.js",[],"D:\\Lockdown\\ReactJS\\kudvenkat\\src\\useState.js",[],"D:\\Lockdown\\ReactJS\\kudvenkat\\src\\useState1.js",[],"D:\\Lockdown\\ReactJS\\kudvenkat\\src\\useState2.js",[],"D:\\Lockdown\\ReactJS\\kudvenkat\\src\\useEffect.js",["86"],"import React, { Component, useState, useEffect } from \"react\";\r\n\r\nexport default function EmployeeComponent(){\r\n  const [employees,setEmployees]=useState([]);\r\n\r\n  useEffect(()=>{\r\n    // alert('We are in useEffect function');\r\n    fetch(\"http://localhost:3000/employees\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setEmployees(result);\r\n        }\r\n      );\r\n  },[]);   //Here we are using [] as second argument for useEffect function,because [] states it must be render only once\r\n          //Otherwise it will go into infinite loop and alert will continiously come\r\n  return(\r\n    <div>\r\n      <h2>Employees Data...</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>FirstName</th>\r\n            <th>LastName</th>\r\n            <th>Email</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {employees.map(emp=>(\r\n            <tr key={emp.id}>\r\n              <td>{emp.id}</td>\r\n              <td>{emp.first_name}</td>\r\n              <td>{emp.last_name}</td>\r\n              <td>{emp.email}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\useEffect1.js",["87"],"\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nexport default function EmployeeComponent1(){\r\n  const [employees,setEmployees]=useState([]);\r\n  const [searchText,searchTextState] = useState('')\r\n\r\n  useEffect(()=>{\r\n    alert('We are in useEffect function');\r\n    fetch(\"http://localhost:3000/employees\"+searchText)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setEmployees(result);\r\n        }\r\n      );\r\n  },[searchText]);   //whwnever there is a change in search text then compoent will be re rendered\r\n        //the value in [] is called dependency, it may be states or props\r\n  function searchTextFunction (e){searchTextState(e.target.value)}\r\n  return(\r\n    <div>\r\n      <h2>Employees Data...</h2>\r\n      <input type =\"text\" value={searchText} onChange={searchTextFunction} /> <br/>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>FirstName</th>\r\n            <th>LastName</th>\r\n            <th>Email</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {employees.map(emp=>(\r\n            <tr key={emp.id}>\r\n              <td>{emp.id}</td>\r\n              <td>{emp.first_name}</td>\r\n              <td>{emp.last_name}</td>\r\n              <td>{emp.email}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\useEffect2.js",["88"],"import React, { Component, useState, useEffect } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport default function EmployeeEffect(){\r\n    const [count,setCount] = useState(0);     //step1\r\n    useEffect(()=>{var interval = setInterval(getEmpCount(),3000);   //step3\r\n                    return ()=>{clearInterval(interval)}      //Step6//without this step interval will not clear\r\n                    //and popups after we calls new component also. so we done this,its called componentWillUnmount method               \r\n    })  \r\n    \r\n    function getEmpCount(){    //step2\r\n        alert(\"setInterval\");\r\n        fetch(\"http://localhost:3000/employees\")\r\n      .then(res => res.json())\r\n      .then((result) => {setCount(result.length);});    \r\n    }\r\n    function willUnmountFunc(){             //step5\r\n        ReactDOM.render(<WillUnmount />,document.getElementById('useEffect2'))\r\n    }\r\n    function WillUnmount(){             //step4\r\n        return <h2>Component after button click and previous one will unmount</h2>\r\n    }\r\n    return <>\r\n            <h3>Emps Count is {count}</h3>\r\n            <button onClick={willUnmountFunc}>Click to unmount this component</button>\r\n            </>\r\n\r\n}\r\n","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\useContext.js",["89","90","91"],"import ReactDOM from \"react-dom\";\r\nimport React, { Component, useState, useContext } from \"react\";\r\n\r\nconst employeeContext=React.createContext();\r\nexport default function UseContextFunc(){\r\n  const [employee,setEmployee]=useState({Id:101,Name:'Pragim',\r\n                                Location:'Bangalore',Salary:12345});\r\n  return(\r\n    <div>\r\n      <h2>Welcome to App Component...</h2>\r\n      <employeeContext.Provider value={employee}>\r\n          <Employee></Employee>\r\n      </employeeContext.Provider>      \r\n    </div>\r\n  );}\r\n\r\nfunction Employee(){\r\n  let context=useContext(employeeContext);\r\n\r\n  return(\r\n    <div>\r\n      <h2>Welcome to Employee Component...</h2>\r\n      <p>\r\n        <label>Employee ID : <b>{context.Id}</b></label>\r\n      </p>\r\n      <p>\r\n        <label>Employee Name : <b>{context.Name}</b></label>\r\n      </p>\r\n      <Salary></Salary>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Salary(){\r\n  let context=useContext(employeeContext);\r\n\r\n  return(\r\n    <div>\r\n      <h2>Welcome to Salary Component...</h2>\r\n      <p>\r\n        <label>Employee ID : <b>{context.Id}</b></label>\r\n      </p>\r\n      <p>\r\n        <label>Employee Salary : <b>{context.Salary}</b></label>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\useContext1.js",["92","93"],"import ReactDOM from \"react-dom\";\r\nimport React, { Component, useState, useContext } from \"react\";\r\n\r\nconst employeeContext=React.createContext();\r\n\r\nexport default function UseContextFunc1(){\r\n  const [employee,setEmployee]=useState({Id:101,Name:'Pragim',Type:'Contract',\r\n                                Location:'Bangalore',Salary:12345, EmploymentType:'Contract'});\r\n  return(\r\n    <div>\r\n      <h2>Welcome to App Component...</h2>\r\n      <p><label>Employee Salary : <b>{employee.Salary}</b></label> </p>\r\n      <employeeContext.Provider value={{data:employee,updateEmployee:setEmployee}}>\r\n          <Employee></Employee>\r\n      </employeeContext.Provider>           \r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Employee(){\r\n  let context=useContext(employeeContext);\r\n  function changeEmploymentType(){\r\n    context.updateEmployee({...context.data,EmploymentType:'Permanent'});\r\n  }\r\n  return(\r\n    <div>\r\n      <h2>Welcome to Employee Component...</h2>\r\n      <p>  <label>Employee ID : <b>{context.data.Id}</b></label>    </p>\r\n      <p>  <label>Employee Name : <b>{context.data.Name}</b></label>   </p>  \r\n      <p>  <label>Employee Salary : <b>{context.data.Salary}</b></label> </p>    \r\n      <employeeContext.Consumer>\r\n        {value=>value.data.EmploymentType==='Permanent'?\r\n              <Permanent></Permanent>:<Contract></Contract>}\r\n      </employeeContext.Consumer>\r\n      <button onClick={changeEmploymentType}>Make Permanent</button>\r\n      <Salary></Salary>\r\n    </div>\r\n  );\r\n}\r\nfunction Salary(){\r\n  let context=useContext(employeeContext);\r\n\r\n  function updateSalary(){\r\n    context.updateEmployee({...context.data,Salary:15000});\r\n  }\r\n  return(\r\n    <div>\r\n      <h2>Welcome to Salary Component...</h2>\r\n      <p>\r\n        <label>Employee ID : <b>{context.data.Id}</b></label>\r\n      </p>\r\n      <p>\r\n        <label>Employee Salary : <b>{context.data.Salary}</b></label>\r\n      </p>\r\n      <button onClick={updateSalary}>Update</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Permanent(){\r\n  return (\r\n    <div>\r\n      <h2>Permanent Component Contents...</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Contract(){\r\n  return(\r\n    <div>\r\n      <h2>Contract Component Contents...</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","D:\\Lockdown\\ReactJS\\kudvenkat\\src\\customHook.js",[],{"ruleId":"94","severity":1,"message":"95","line":14,"column":8,"nodeType":"96","messageId":"97","endLine":14,"endColumn":21},{"ruleId":"94","severity":1,"message":"98","line":15,"column":8,"nodeType":"96","messageId":"97","endLine":15,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":85,"column":68,"nodeType":"101","endLine":86,"endColumn":7},{"ruleId":"99","severity":1,"message":"100","line":86,"column":62,"nodeType":"101","endLine":87,"endColumn":5},{"ruleId":"99","severity":1,"message":"100","line":110,"column":59,"nodeType":"101","endLine":111,"endColumn":19},{"ruleId":"99","severity":1,"message":"100","line":125,"column":67,"nodeType":"101","endLine":126,"endColumn":17},{"ruleId":"99","severity":1,"message":"100","line":280,"column":68,"nodeType":"101","endLine":281,"endColumn":9},{"ruleId":"102","severity":1,"message":"103","line":306,"column":3,"nodeType":"104","messageId":"105","endLine":308,"endColumn":4},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"106","replacedBy":"110"},{"ruleId":"108","replacedBy":"111"},{"ruleId":"94","severity":1,"message":"112","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"112","line":2,"column":17,"nodeType":"96","messageId":"97","endLine":2,"endColumn":26},{"ruleId":"94","severity":1,"message":"112","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"113","line":1,"column":8,"nodeType":"96","messageId":"97","endLine":1,"endColumn":16},{"ruleId":"94","severity":1,"message":"112","line":2,"column":17,"nodeType":"96","messageId":"97","endLine":2,"endColumn":26},{"ruleId":"94","severity":1,"message":"114","line":6,"column":19,"nodeType":"96","messageId":"97","endLine":6,"endColumn":30},{"ruleId":"94","severity":1,"message":"113","line":1,"column":8,"nodeType":"96","messageId":"97","endLine":1,"endColumn":16},{"ruleId":"94","severity":1,"message":"112","line":2,"column":17,"nodeType":"96","messageId":"97","endLine":2,"endColumn":26},"no-unused-vars","'DatatablePage' is defined but never used.","Identifier","unusedVar","'EmployeeComponent1' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-native-reassign",["115"],"no-negated-in-lhs",["116"],["115"],["116"],"'Component' is defined but never used.","'ReactDOM' is defined but never used.","'setEmployee' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]